# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ai2thor.api import robot_state_pb2 as ai2thor_dot_api_dot_robot__state__pb2


class RobotStateServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetRobotState = channel.unary_unary(
        '/ai2thor.api.RobotStateService/GetRobotState',
        request_serializer=ai2thor_dot_api_dot_robot__state__pb2.RobotStateRequest.SerializeToString,
        response_deserializer=ai2thor_dot_api_dot_robot__state__pb2.RobotState.FromString,
        )


class RobotStateServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetRobotState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RobotStateServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetRobotState': grpc.unary_unary_rpc_method_handler(
          servicer.GetRobotState,
          request_deserializer=ai2thor_dot_api_dot_robot__state__pb2.RobotStateRequest.FromString,
          response_serializer=ai2thor_dot_api_dot_robot__state__pb2.RobotState.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai2thor.api.RobotStateService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
